{"name":"Antelope","tagline":"Antelope Realtime Events framework for feature engineering in agile machine learning environments.","body":"# Antelope Realtime Events #\r\n\r\nThe *Antelope Realtime Events* project aims to make iterative and agile machine learning\r\na practical reality, especially in systems that must respond immediately to new\r\ncircumstances.  It derives from a proprietary framework used by\r\n[if(we)](http://www.ifwe.co/) to develop recommendation engines for our social products.\r\nBy unifying the software that data scientists use to extract data for training a\r\nmachine learning model with the software used to run that model in production, a much\r\nfaster progress cycle becomes possible.\r\n\r\n## What's new in v0.2 ##\r\n\r\nThis remains a demonstration release designed to expose the API and programming style.\r\n\r\nUpdates in v0.2 include:\r\n* Spell correction in product search demo - we found that the most apparent cause of \r\n  recommendation errors in the demo was spelling mistakes.\r\n* [Web demo](doc/demo-web.md) - front-end for the product search demo so you can\r\n  interact with the product directly\r\n* Cached events - this performance improvement saves events to a cache using binary\r\n  serialization. Eliminating input parsing and merging overheads speeds up development\r\n  cycles and makes practical larger data sets.\r\n* Expanded feature types - we introduce a greater variety of features as well as \r\n  [feature engineering documentation](doc/features.md).\r\n\r\nWe encourage you to explore the framework and to run the demos, but please understand\r\nthat production needs have not been yet provided for. Among other things, the in-memory\r\nstate representation uses JVM objects whereas our production implementation uses\r\npacked arrays, an optimization that allows for larger models and practical checkpoints.\r\n\r\nWe're releasing Antelope now because we want your feedback!  Please join the\r\n[Google Group](https://groups.google.com/forum/#!forum/antelope-rte) and please\r\ndon't hesitate to post your questions, suggestions, or ideas.\r\n\r\n## Running the Kaggle Demo\r\n\r\nPerhaps the best way to understand what Antelope does is by giving it a quick try.\r\nThis project contains examples that work with the \r\n[ACM SF Chapter's Best Buy data set](https://www.kaggle.com/c/acm-sf-chapter-hackathon-small).\r\n\r\nPlease see the [Getting Started with the Demo](doc/demo.md) documentation and\r\nfollow the instructions to download the data and to go through a simple machine\r\nlearning exercise. To see this demonstration embedded in a working web application\r\ncheck out instructions at [Running the Web Demo](doc/demo-web.md).\r\n\r\n## Language for feature engineering\r\n\r\nAntelope aims to provide an expressive DSL-like experience for shaping raw streams of\r\ninput events into the signals or features directly useful to machine learning. Our\r\nguiding principle is that concepts that are easy to explain should be easy to implement.\r\nPlease see the [feature engineering](doc/features.md) documentation for further\r\ndescriptions and examples.\r\n\r\n## Applicability\r\n\r\n### What Antelope does (or will do... eventually)\r\n* Make it easy to derive useful features from event history\r\n* Allow models to reflect new events within seconds, or even in under a second\r\n* Produce top recommendations from millions of candidates in a fraction of a second\r\n* Enable rapid iterative cycle around feature ideas, model training, and production deployment\r\n* Allow one definition of model features to be used in training, offline validation, and production\r\n* Provide access to powerful programming abstractions by integrating with Scala language\r\n* Accept a variety of machine learning techniques\r\n* Works with scalable stream processing frameworks (not yet, but that's our vision)\r\n\r\n### What Antelope doesn't do\r\n* Accept data that is not structured in form of events - that's our requirement!\r\n* Train machine learning models - there are plenty of implementations for those\r\n* Collect or store event logs - integrate with Kafka, Hadoop, or related technologies\r\n* Store model state - we build on databases and stream processing frameworks\r\n\r\n## Frequently Asked Questions\r\n\r\n### Why doesn't if(we) release the machine learning framework they are actively using? \r\n\r\nAntelope is derived from a proprietary in-house framework that's tied to a legacy\r\ncustom logging infrastructure and that lacks clean separation from some of our\r\ndomain-specific needs.\r\n\r\nWe're building Antelope on broadly-used open-source foundations.  Today, if(we) is\r\nmigrating the logging infrastructure to [Kafka](https://kafka.apache.org/) and we\r\nhave introduced stream processing frameworks such as [Storm](https://storm.apache.org/)\r\nand [Spark](https://spark.apache.org/).  Antelope is designed to work well with these\r\ntechnologies.\r\n\r\nAlso, there are so many things we would do differently today, and a rewrite gives\r\nus that opportunity.\r\n\r\n### When will I be able to use Antelope in production?\r\n\r\nThat depends on how much support we get from people like you.  Please join the\r\n[Google Group](https://groups.google.com/forum/#!forum/antelope-rte) and let's talk about\r\nhow you can help.\r\n  \r\n### Will Antelope work with my favorite machine learning algorithm?\r\n\r\nAntelope is largely agnostic of choice of machine learning technique as it creates the feature\r\nvectors that can serve as inputs to arbitrary supervised learning implementations.  The\r\ntechniques we deploy most commonly at if(we) are logistic regression and random forests.  We\r\nalso sometimes implement purely heuristic decision criteria.\r\n\r\n### Will Antelope work with my programming favorite language, stream processing framework, database, or other technology?\r\n\r\nThe Antelope approach is framework-agnostic when it comes to sourcing, processing, or storing\r\ndata.  We are designing for pluggable implementations, so if we're not compatible with your\r\nfavorite technologies, then please talk to us about helping make that happen.\r\n\r\nAntelope, at it's core, is a Scala-based implementation.  Early on, we considered developing a\r\ncustom language for expressing features.  It's an idea we come back to from time to time, but\r\neach time we've revisited it we've concluded that it makes more sense to build a library that\r\nworks in concert with a full-featured and powerful programming environment.\r\n\r\n### What if I don't program in Scala?\r\n\r\nScala programmers will find working with Antelope very comfortable.  If you're not a Scala\r\ndeveloper, rest assured that you can use Antelope effectively with only very limited\r\nScala knowledge.  Once you learn the Antelope primitives and the basics of Scala syntax\r\nyou should be well on your way.\r\n\r\n-----\r\n\r\nREADME.md: Copyright 2015 Ifwe Inc.\r\n\r\nREADME.md is licensed under a Creative Commons Attribution-ShareAlike 4.0\r\nInternational License.\r\n\r\nYou should have received a copy of the license along with this work. If not,\r\nsee <http://creativecommons.org/licenses/by-sa/4.0/>.","google":"UA-62356802-1","note":"Don't delete this file! It's used internally to help with page regeneration."}